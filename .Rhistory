acs
mydata
mytable2(ER~pSUV, mydata, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(Dx~BMI, data=acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(Dx~BMI, acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(BMI ~ Dx, acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(BMI ~ Dx, acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(BMI~Dx, acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
densityplot(BMI~Dx, data=acs)
mytable2(BMI~Dx, data=acs)
densityplot(BMI~Dx, data=acs)
warnings()
densityplot(BMI+Sex~Dx, data=acs)
densityplot(BMI+age~Dx, data=acs)
densityplot(BMI~Dx+age, data=acs)
mytable2(BMI+group~Dx, data=acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(BMI~Dx, data=acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
source('~/Documents/Workspace/non-parametric.R', echo=TRUE)
wilcox.test(pSUV~ER, alternative = "two.sided", exact = FALSE, correct = FALSE, data = mydata)
dunn.test (mydata$pSUV, mydata$ER, method="bonferroni", kw=TRUE, label=TRUE,
wrap=FALSE, table=TRUE, list=FALSE, rmc=FALSE, alpha=0.05)
dunn.test (mydata$pSUV, mydata$subtype, method="bonferroni", kw=TRUE, label=TRUE,
wrap=FALSE, table=TRUE, list=FALSE, rmc=FALSE, alpha=0.05)
k <- pSUV
k <- "pSUV"
wilcox.test(k~ER, alternative = "two.sided", exact = FALSE, correct = FALSE, data = mydata)
wilcox.test(`k~ER, alternative = "two.sided", exact = FALSE, correct = FALSE, data = mydata)
wilcox.test(k~ER, alternative = "two.sided", exact = FALSE, correct = FALSE, data = mydata)
ççAccount# 6006637508962420
Account# 6006637508962420
quit
quit()
exit
dunn.test (mydata$pSUV, mydata$subtype, method="bonferroni", kw=TRUE, label=TRUE,
wrap=FALSE, table=TRUE, list=FALSE, rmc=FALSE, alpha=0.05)
..
.
dunn.test (mydata$pSUV, mydata$subtype, method="bonferroni", kw=TRUE, label=TRUE,
wrap=FALSE, table=TRUE, list=FALSE, rmc=FALSE, alpha=0.05)
wrap=FALSE, table=TRUE, list=FALSE, rmc=FALSE, alpha=0.05)
df <- data.frame(mydata)
View(df)
wilcox.test(pSUV~ER, alternative = "two.sided", exact = FALSE, correct = FALSE, data = mydata)
mytable(pSUV~ER, df)
mytable2(pSUV~ER, df)
mytable2(pSUV~ER, data=df)
mytable2(pSUV~ER, data=df,max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
data(acs)
acs
mytable2(EF~Dx, data=df,max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(EF~Dx, data=acs,max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(EF~Dx, data=acs,max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(Dx~EF, data=acs,max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(Dx~EF, acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(Dx ~ EF, acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(EF ~ Dx, acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(EF~Dx, data=acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(EF+sex~Dx, data=acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(EF+sex~Dx, data=acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
sex
mytable2(EF+sex~Dx, data=acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(EF+HDLC~Dx, data=acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(EF+HDLC~DM, data=acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(DF~DM, data=acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(EF~DM, data=acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(DM~EF, data=acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(DM+sex~EF, data=acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable2(DM~EF, data=acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable(DM~EF, data=acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable(DM+sex~EF, data=acs, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable(pSUV~subtype, data=mydata, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable(subtype-pSUV, data=mydata, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mydata <- read.csv("~/Documents/Workspace/SWE.csv", header=TRUE, sep=",")
mytable(subtype-pSUV, data=mydata, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable(ER-pSUV, data=mydata, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable(ER~pSUV, data=mydata, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable(pSUV~ER, data=mydata, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable(pSUV~ER, data=mydata, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable(ER~pSUV, data=mydata, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
View(mydata)
View(mydata)
mytable(pSUV~ER, data=mydata, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable(ER~pSUV, data=mydata, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable(subtype~pSUV, data=mydata, max.ylev = 5, digits = 2, method = 1, show.all = FALSE)
mytable(subtype~pSUV, data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(~pSUV, data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(subtype~, data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(subtype~., data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
dunn.test (mydata$., mydata$subtype, method="bonferroni", kw=TRUE, label=TRUE,
wrap=FALSE, table=TRUE, list=FALSE, rmc=FALSE, alpha=0.05)
dunn.test (mydata$*, mydata$subtype, method="bonferroni", kw=TRUE, label=TRUE,
wrap=FALSE, table=TRUE, list=FALSE, rmc=FALSE, alpha=0.05)
mytable(subtype~., data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
k <- mytable(subtype~., data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
View(k)
View(k)
View(k)
write.csv(k)
write.xlsx(k, "~/Documents/Workspace/result1.xlsx")
library(xlsx)
source('~/Documents/Workspace/rjava_mod.R', echo=TRUE)
library(xlsx)
k <- mytable(subtype~., data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
write.xlsx(k, "~/Documents/Workspace/result1.xlsx")
mycsv.mytable(k)
mycsv.mytable(k,file="test03.csv")
dunn.test (mydata$, mydata$subtype, method="bonferroni", kw=TRUE, label=TRUE,
wrap=FALSE, table=TRUE, list=FALSE, rmc=FALSE, alpha=0.05)
mytable2(op2+subtype~.,data=mydata)
mytable2(opyn+subtype~.,data=mydata)
mytable2(opyn+subtype~pSUV.,data=mydata)
mytable2(opyn+subtype~., data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable2(opyn+subtype~pSUV, data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mydataop = subset(mydata, opyn=1)
mytable(subtype~pSUV, data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(subtype~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
library(doBy)
library(dunn.test)
library(moonBook)
library(xlsx)
mydata <- read.csv("~/Documents/Workspace/SWE.csv", header=TRUE, sep=",")
mydataop = subset(mydata, opyn=1)
mytable(subtype~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
result <-mytable(subtype~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mycsv.mytable(result,file="result_op_by subtype.csv")
library(doBy)
library(dunn.test)
library(moonBook)
library(xlsx)
mydata <- read.csv("~/Documents/Workspace/SWE.csv", header=TRUE, sep=",")
mydataop = subset(mydata, opyn=1)
mytable(subtype~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
result <-mytable(subtype~., data=mydataop, max.ylev = 5, digits = 2, method = 3, show.all = FALSE)
mycsv.mytable(result,file="result_op_by subtype.csv")
cor("everyting", method=spearman)
cor("everyting", method=spearman)
cor(mydata)
cor(pSUV,sSUV)
cor("pSUV","sSUV")
cor(mydata$pSUV,mydata$sSUV)
cor(c(mydata$pSUV,mydata$sSUV),mydata$sSUV)
cor.test()"pSUV","sSUV")
cor.test(mydata$pSUV,mydata$sSUV)
cor.test(mydata$pSUV, mydata$pSUVR,method = c("pearson", "kendall", "spearman"))
cor.test(mydata$pSUV, mydata$pSUVR,method = c("pearson", "kendall", "spearman")
cor.test(mydata$pSUV, mydata$pSUVR,method = c("pearson", "kendall", "spearman"))
cor.test(mydata$pSUV, mydata$pSUVR,method = "spearman")
cor.test(c(mydata$pSUV,mydata$sSUV), mydata$pSUVR,method = "spearman")
cor.test(c(mydata$pSUV,mydata$sSUV), c(mydata$pSUV,mydata$sSUV),method = "spearman")
cor.test(c(mydata$pSUV,mydata$sSUV), c(mydata$pSUVR,mydata$sSUVR),method = "spearman")
l <- list(mydata@pSUV)
l <- mydata@pSUV)
l <- mydata@pSUV
cor.test(mydataop$pSUV, mydataop$SWER1,method = "spearman")
install.packages("psych")
cor(mydata)
library(psych)
View(mydataop)
View(mydataop)
corr.test(mydataop[2:23])
corr.test(mydata[2:23])
corr.test(mydata[2:23], method = spearman)
cor.test(mydata[2:23], mydataop$SWER1,method = "spearman")
cor.test(mydata[2], mydataop$SWER1,method = "spearman")
cor.test(mydata[2,], mydataop$SWER1,method = "spearman")
cor.test(mydata[2,], mydata[2,],method = "spearman")
cor.test(mydata$no, mydata[2,],method = "spearman")
cor.test(mydata$no, mydata$pSUV,method = "spearman")
mydata[,2]
dunn.test (mydata[,2], mydata[,4], method="bonferroni", kw=TRUE,
label=TRUE,wrap=FALSE, table=TRUE, list=FALSE, rmc=FALSE, alpha=0.05)
cor.test(mydata[,2], mydata[,4],method = "spearman")
dunn.test (mydata[,2], mydata[,.], method="bonferroni", kw=TRUE,
label=TRUE,wrap=FALSE, table=TRUE, list=FALSE, rmc=FALSE, alpha=0.05)
dunn.test (mydata[,2], mydata[,], method="bonferroni", kw=TRUE,
label=TRUE,wrap=FALSE, table=TRUE, list=FALSE, rmc=FALSE, alpha=0.05)
k<-1
dunn.test (mydata[,k], mydata[,k+1], method="bonferroni", kw=TRUE,
label=TRUE,wrap=FALSE, table=TRUE, list=FALSE, rmc=FALSE, alpha=0.05)
cor.test(mydata[,k], mydata[,k+1],method = "spearman")
install.packages("Hmisc")
library(himsc)
library(hmisc)
library(Hmisc)
install.packages(lattice)
install.packages("ggplot2")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
library(Hmisc)
install.packages("munsell")
library(Hmisc)
rcorr(mydata[,k], mydata[,k+1], type="spearman")
rcorr,test(mydata[,k], mydata[,k+1], type="spearman")
rcorr.test(mydata[,k], mydata[,k+1], type="spearman")
rcorr(mydata, type="spearman")
rcorr(mydata$pSUV, type="spearman")
rcorr(mydata$pSUV, mydata$sSUV, type="spearman")
rcorr(mydataop$pSUV, mydataop$sSUV, type="spearman")
mydataop = subset(mydata, opyn=1)
rcorr(mydataop$pSUV, mydataop$sSUV, type="spearman")
mydata <- read.csv("~/Documents/Workspace/SWE.csv", header=TRUE, sep=",")
mydataop = subset(mydata, opyn=1)
mytable(subtype~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
source('~/Documents/Workspace/non-parametric.R', echo=TRUE)
source('~/Documents/Workspace/rjava_mod.R', echo=TRUE)
source('~/Documents/Workspace/non-parametric.R', echo=TRUE)
corr.test(mydataop[2:23])
corr.test(mydataop[2:23], short=FALSE)
corr.test(mydataop[2:23], short="FALSE")
corr.test(mydata[2:23], method = "spearman")
print(corr.test(mydata[2:23], method = "spearman"),short=FALSE)
rcorr(mydataop$pSUV, mydataop$sSUV, adjust="none", type="spearman")
print(rcorr.test(mydata[2:23], method = "spearman"),short=FALSE)
print(corr.test(mydata[2:23], method = "spearman"),short=FALSE)
print(corr.test(mydata[2:23], method = "spearman", adjust="none"),short=FALSE)
print(corr.p(mydata[2:23], method = "spearman", adjust="none"),short=FALSE)
print(corr(mydata[2:23], method = "spearman", adjust="none"),short=FALSE)
print(cor(mydata[2:23], method = "spearman", adjust="none"),short=FALSE)
print(corr.p(mydata[2:23], method = "spearman"),short=FALSE)
corr.test(mydata[2:23], method = "spearman")
corr.p(mydata[2:23], method = "spearman")
corr.p(mydata[2:23])
corr.p(mydata[2:23],n=200)
corr.p(mydata[2:23],n=100)
corr.p(mydata,n=100)
corr.p(mydata$pSUV,n=100)
corr.test(mydataop[2:23])
print(corr.p(mydata$pSUV,n=100),short=FALSE)
print(corr.test(mydataop[2:23]), short=FALSE)
print(corr.test(mydataop[2:23]), short=FALSE)
max.print
getOption(max.print
)print(corr.p(mydata$pSUV,n=100),short=FALSE)
getOption(max.print)
getOption("max.print")
max.print
options(max.print=999999)
print(corr.test(mydataop[2:23]), short=FALSE)
print(corr.test(mydataop[2:23]))
rcorr(mydataop$pSUV, mydataop$sSUV, adjust="none", type="spearman")
rcorr(mydataop$pSUV, mydataop$sSUV, type="spearman")
remove.packages("Hmisc")
remove.packages(Hmisc)
library(doBy)
library(dunn.test)
print(mytable(subtype~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE))
library(doBy)
#library(dunn.test)
library(moonBook)
library(xlsx)
library(psych)
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
require("xlsx")
library(doBy)
#library(dunn.test)
library(moonBook)
library(xlsx)
library(psych)
mydata <- read.csv("~/Documents//SWE.csv", header=TRUE, sep=",")
mydata <- read.csv("~/Documents/SWE.csv", header=TRUE, sep=",")
mydata <- read.csv("~/Desktop/SWE.csv", header=TRUE, sep=",")
mydataop = subset(mydata, op=1)
mydata <- read.csv("~/Desktop/SWE.csv", header=TRUE, sep=",")
mydataop = subset(mydata, op=1)
print(mytable(subtype~., data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE))
print(mytable(subtype~pSUV:sSVU., data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE))
print(mytable(subtype~pSUV:sSUV., data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE))
print(mytable(subtype~pSUV., data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE))
print(mytable(subtype~pSUV, data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE))
print(mytable(subtype~., data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE))
mycsv.mytable(mytable(subtype~., data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE),file="resultbysubtype.csv")
mycsv.mytable(mytable(subtype~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE),file="resultOPbysubtype.csv")
corr.test(mydataop[2:23]))
corr.test(mydataop[2:23])
corr.test(mydataop[2:23], short=FALSE)
corr.test(mydataop[2:23], method = "spearman")
print(corr.test(mydataop[2:23], method = "spearman"),short=FALSE)
options(max.print=999999)
print(corr.test(mydataop[2:23], method = "spearman"),short=FALSE)
mydataop = subset(mydata, op2=1)
mycsv.mytable(mytable(subtype~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE),file="resultOPbysubtype.csv")
View(mydata)
View(mydata)
mydataop = subset(mydata, OP2=1)
View(mydataop)
View(mydataop)
mydataop = subset(mydata, OP2==1)
mycsv.mytable(mytable(subtype~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE),file="resultOPbysubtype.csv")
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
require("xlsx")
library(doBy)
library(dunn.test)
library(moonBook)
library(xlsx)
library(psych)
options(max.print=999999)
mydata <- read.csv("~/Desktop/SWE_for_R.csv", header=TRUE, sep=",")
mydata <- read.csv("~/Desktop/SWE_for_R.csv", header=TRUE, sep=",")
mydataop = subset(mydata, OP2==1)
mycsv.mytable(mytable(ER~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE),file="resultOPbysubtype.csv")
mycsv.mytable(mytable(PR~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE),file="resultOPbysubtype.csv")
head(mydata)
str(mydata)
mycsv.mytable(mytable(ER~pSUV., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE),file="resultOPbysubtype.csv")
mytable(ER~pSUV, data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mydataop[23]
mydataop[23:4]
mydataop[23:40]
mytable(mydataop[35}~pSUV, data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(mydataop[35]~pSUV, data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(mydataop$ER~pSUV, data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(ER~pSUV, data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(LN~pSUV, data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(p53~pSUV, data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(ER~pSUV, data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(HER2~pSUV, data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(HER2~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
head(mydataop)
View(mydataop)
View(mydataop)
mydata <- read.csv("~/Desktop/SWE_for_R.csv", header=TRUE, sep=",")
mydataop = subset(mydata, OP2==1)
mydataop = subset(mydata, OP2==1)
mydata <- read.csv("~/Desktop/SWE_for_R.csv", header=TRUE, sep=",")
mydataop = subset(mydata, OP2==1)
mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
mydataop = subset(mydata, OP2==1)
mytable(HER2~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(OER~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(OPR~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(ki67~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(ki-67~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(subtype~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(OER~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(OPR~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(HER2~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(subtype~., data=mydataop, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(subtype~., data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
mytable(OER~., data=mydata, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
install.packages("stats")
install.packages("stats")
install.packages("BioStatR")
library(BioStatR)
remove.packages(BioStatR)
remove.packages("BioStatR"
)
remove.packages('BioStatR'
)
libarary(psych)
install.packages("psych")
data(mydataop)
library(moonBook)
source('~/Documents/Workspace/rjava_mod.R', echo=TRUE)
library(moonBook)
library(xlsx)
library(psych)
options(max.print=999999)
mydata <- read.csv("~/Documents/Workspace//SWE2.csv", header=TRUE, sep=",")
mydata <- read.csv("~/Documents/Workspace/result_op_by subtype.csv.csv", header=TRUE, sep=",")
mydata <- read.csv("~/Documents/Workspace/result_op_by subtype.csv", header=TRUE, sep=",")
cor.test( ~ pSUV + SWE,
data=mydata,
method = "spearman",
continuity = FALSE,
conf.level = 0.95)
View(mydata)
Desktop
mydata <- read.csv("~/Desktop/SWE_for_r.csv", header=TRUE, sep=",")
mydataop = subset(mydata, OP2==1)
mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
mydataop = subset(mydata, OP2==1)
cor.test( ~ pSUV + SWE,
data=mydataop,
method = "spearman",
continuity = FALSE,
conf.level = 0.95)
cor.test( ~ pSUV + SWER1,
data=mydataop,
method = "spearman",
continuity = FALSE,
conf.level = 0.95)
cor.test( ~ . + SWER1,
data=mydataop,
method = "spearman",
continuity = FALSE,
conf.level = 0.95)
install.packages(c("backports", "digest", "git2r", "htmlTable", "htmlwidgets", "knitr", "lava", "MASS", "matrixStats", "mgcv", "msm", "mvtnorm", "openssl", "quantreg", "Rcpp", "rlang", "rms", "rpart", "tibble", "tidyr", "timereg", "viridis", "viridisLite", "withr", "zoo"))
source('~/Documents/Workspace/rjava_mod.R', echo=TRUE)
library(readxl)
dataset <- read_excel(NULL)
View(dataset)
library(readxl)
stat1 <- read_excel("/Volumes/PNY128/stat1.xlsx",
sheet = "Sheet1")
View(stat1)
source('~/Documents/Workspace/non-parametric.R', echo=TRUE)
source('~/Documents/Workspace/non-parametric.R', echo=TRUE)
source('~/Documents/Workspace/non-parametric.R', echo=TRUE)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mytable(max~peak, data=stat1, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mytable(~peak, data=stat1, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mytable(.~peak, data=stat1, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mytable(, data=stat1, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mytable(., data=stat1, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mytable(stat1)
data(stat1)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
summary(stat1)
mytable(., data=stat1, max.ylev = 5, digits = 4, method = 3, show.all = FALSE)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
summary(stat1)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mycsv.summary(stat1)
mytable(~, data=stat1, max.ylev = 5, digits = 4, method = 3, show.all = FALSE)
mytable(.~., data=stat1, max.ylev = 5, digits = 4, method = 3, show.all = FALSE)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
summary(stat1)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mycsv.mytable(summary(stat1), file="result.csv")
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mycsv.mytable(summary(stat1), file="result.csv")
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
print(summary(stat1))
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
write.c(summary(stat1), file="result")
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
write.csv(summary(stat1), file="result")
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
write.csv(summary(stat1), file="result.csv")
source('~/Documents/Workspace/rjava_mod.R', echo=TRUE)
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
library(dataMaid)
install.packages('dataMaid')
library(dataMaid)
makeCodebook(iris)
require(datMaid)
require(dataMaid)
makeCodebook(iris)
makeCodebook(iris)
library(moonBook)
mydata <- read.csv("swepet.csv", header=TRUE, sep=",")
library(xlsx)
read.xlsx('swepet.xlsx')
file <- system.file("swepet.xlsx", package = "xlsx")
file <- read.xlsx("swepet.xlsx", package = "xlsx")
file <- read.xlsx("swepet.xlsx", 1)
library(dataMaid)
makeCodebook(file)
View(file)
summary(file)
print(summary(file))
x <- data.frame(c(1:3), "na")
View(x)
y <- "12345"
names(x) <- c("var",j)
names(x) <- c("var",*j)
names(x) <- c("var","kkk")
View(x)
y <- 12345
names(x) <- c("var",*j)
names(x) <- c("var",j)
names(x) <- c("var",y)
View(x)
y <- "12345x"
names(x) <- c("var",y)
names(x) <- c(,y)
names(x) <- y
View(x)
names(x) <- c("var",y)
View(x)
setwd("~/Google Drive/2017 KSNM CTN/ThyPathParsing")
dat <- data.frame(var=c("ID",
"Pathology",
"Histologic subtype",
"Maximum diameter of tumor",
"Tumor involvement",
"central",
"ret-central",
"mediastinal",
"ret-mediastinal",
"lateral",
"ret-lateral",
"total",
"ret-total",
"max size",
"perinodal"), val='NA',stringsAsFactors = FALSE)
data.all <- dat
View(data.all)
