)
remove.packages('BioStatR'
)
libarary(psych)
install.packages("psych")
data(mydataop)
library(moonBook)
source('~/Documents/Workspace/rjava_mod.R', echo=TRUE)
library(moonBook)
library(xlsx)
library(psych)
options(max.print=999999)
mydata <- read.csv("~/Documents/Workspace//SWE2.csv", header=TRUE, sep=",")
mydata <- read.csv("~/Documents/Workspace/result_op_by subtype.csv.csv", header=TRUE, sep=",")
mydata <- read.csv("~/Documents/Workspace/result_op_by subtype.csv", header=TRUE, sep=",")
cor.test( ~ pSUV + SWE,
data=mydata,
method = "spearman",
continuity = FALSE,
conf.level = 0.95)
View(mydata)
Desktop
mydata <- read.csv("~/Desktop/SWE_for_r.csv", header=TRUE, sep=",")
mydataop = subset(mydata, OP2==1)
mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
mydataop = subset(mydata, OP2==1)
cor.test( ~ pSUV + SWE,
data=mydataop,
method = "spearman",
continuity = FALSE,
conf.level = 0.95)
cor.test( ~ pSUV + SWER1,
data=mydataop,
method = "spearman",
continuity = FALSE,
conf.level = 0.95)
cor.test( ~ . + SWER1,
data=mydataop,
method = "spearman",
continuity = FALSE,
conf.level = 0.95)
install.packages(c("backports", "digest", "git2r", "htmlTable", "htmlwidgets", "knitr", "lava", "MASS", "matrixStats", "mgcv", "msm", "mvtnorm", "openssl", "quantreg", "Rcpp", "rlang", "rms", "rpart", "tibble", "tidyr", "timereg", "viridis", "viridisLite", "withr", "zoo"))
source('~/Documents/Workspace/rjava_mod.R', echo=TRUE)
library(readxl)
dataset <- read_excel(NULL)
View(dataset)
library(readxl)
stat1 <- read_excel("/Volumes/PNY128/stat1.xlsx",
sheet = "Sheet1")
View(stat1)
source('~/Documents/Workspace/non-parametric.R', echo=TRUE)
source('~/Documents/Workspace/non-parametric.R', echo=TRUE)
source('~/Documents/Workspace/non-parametric.R', echo=TRUE)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mytable(max~peak, data=stat1, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mytable(~peak, data=stat1, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mytable(.~peak, data=stat1, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mytable(, data=stat1, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mytable(., data=stat1, max.ylev = 5, digits = 2, method = 2, show.all = FALSE)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mytable(stat1)
data(stat1)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
summary(stat1)
mytable(., data=stat1, max.ylev = 5, digits = 4, method = 3, show.all = FALSE)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
summary(stat1)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mycsv.summary(stat1)
mytable(~, data=stat1, max.ylev = 5, digits = 4, method = 3, show.all = FALSE)
mytable(.~., data=stat1, max.ylev = 5, digits = 4, method = 3, show.all = FALSE)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
summary(stat1)
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mycsv.mytable(summary(stat1), file="result.csv")
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
mycsv.mytable(summary(stat1), file="result.csv")
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
print(summary(stat1))
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
write.c(summary(stat1), file="result")
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
write.csv(summary(stat1), file="result")
# mydata <- read.csv("~/Desktop/SWE2.csv", header=TRUE, sep=",")
# mydataop = subset(mydata, OP2==1)
write.csv(summary(stat1), file="result.csv")
source('~/Documents/Workspace/rjava_mod.R', echo=TRUE)
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
library(dataMaid)
install.packages('dataMaid')
library(dataMaid)
makeCodebook(iris)
require(datMaid)
require(dataMaid)
makeCodebook(iris)
makeCodebook(iris)
library(moonBook)
mydata <- read.csv("swepet.csv", header=TRUE, sep=",")
library(xlsx)
read.xlsx('swepet.xlsx')
file <- system.file("swepet.xlsx", package = "xlsx")
file <- read.xlsx("swepet.xlsx", package = "xlsx")
file <- read.xlsx("swepet.xlsx", 1)
library(dataMaid)
makeCodebook(file)
View(file)
summary(file)
print(summary(file))
x <- data.frame(c(1:3), "na")
View(x)
y <- "12345"
names(x) <- c("var",j)
names(x) <- c("var",*j)
names(x) <- c("var","kkk")
View(x)
y <- 12345
names(x) <- c("var",*j)
names(x) <- c("var",j)
names(x) <- c("var",y)
View(x)
y <- "12345x"
names(x) <- c("var",y)
names(x) <- c(,y)
names(x) <- y
View(x)
names(x) <- c("var",y)
View(x)
### id ###
j <- as.character(df$var[1])
source('~/Google Drive/2017 KSNM CTN/ThyPathParsing/ThyPathParsing.R', echo=TRUE)
setwd("~/Google Drive/2017 KSNM CTN/ThyPathParsing")
source('~/Google Drive/2017 KSNM CTN/ThyPathParsing/ThyPathParsing.R', echo=TRUE)
### id ###
j <- as.character(df$var[1])
library(stringr)
dat <- data.frame(var=c("ID",
"Pathology",
"Histologic subtype",
"Maximum diameter of tumor",
"Tumor involvement",
"central",
"ret-central",
"mediastinal",
"ret-mediastinal",
"lateral",
"ret-lateral",
"total",
"ret-total",
"max size",
"perinodal"), val='NA',stringsAsFactors = FALSE)
df <- read.table(file = "p2.txt", fill = TRUE, sep=":", strip.white=TRUE,col.names=(1:4))
df <- data.frame(lapply(df, gsub, pattern='\xa1\xde |- |"', replacement='', ignore.case=FALSE))
names(df) = c("var","val","val2","val3")
### diagnosis: path ###
j <- grep("Thyroid gland",df$var,ignore.case=TRUE)
for (i in 1:length(j)) {
k <- grepl("CARCINOMA",df[j[i],2])
if (k == TRUE) {
path <- df[j[i],2]
path <- str_split_fixed(path, "[ ][(]", 2)[1]
}
}
dat$val[2] <- path
for (i in (3:5)) {
if (length(as.character(df$val[grep(dat$var[i], df$var, ignore.case = FALSE)])) == 0){
next
}
dat$val[i] <- as.character(df$val[grep(dat$var[i], df$var, ignore.case = FALSE)])
}
### lymph node : lnpath.df ###
l <- grep("Lymph node",df$var)
# size, perinodal
l2 <- str_split(df$val2[9],"[ ]")
# location
ln.df <- data.frame(str_split(df[l,1],","))
colnames(ln.df) = "var"
ln.df <-data.frame(str_split_fixed(ln.df$var, "/|[(]|[)]", 4),stringsAsFactors=FALSE)
lnpatterns <- c("central|delphian|6","3|4|5","7|mediastinal")
lnlocs <- c("central","lateral","mediastinal")
lnlocs2 <-c("ret-central","ret-lateral","ret-mediastinal")
lnpath <- matrix(ncol = 2, nrow = 0)
s_lp = 0
s_lr = 0
for (i in (1:3)) {
l <- grep(c(lnpatterns[i]),ln.df[,1],ignore.case = TRUE)
if (length(l) != 0) {
lp = 0
lr = 0
for (j in 1:length(l)) {
lp = lp + as.numeric(ln.df[l[j],2])
lr = lr + as.numeric(ln.df[l[j],3])
}
lnpath <- rbind(lnpath, c(lnlocs[i],lp))
lnpath <- rbind(lnpath, c(lnlocs2[i],lr))
s_lp = s_lp + lp
s_lr = s_lr + lr
}
}
lnpath <- rbind(lnpath, c("total", s_lp))
lnpath <- rbind(lnpath, c("ret-total", s_lr))
lnpath.df <- data.frame(lnpath,stringsAsFactors = FALSE)
names(lnpath.df) = c("loc","no")
for (i in (6:13)) {
if (length(grep(dat$var[i], lnpath.df$loc)) == 0) {
next
}
dat$val[i] <- lnpath.df$no[grep(dat$var[i], lnpath.df$loc)]
}
# size, perinodal
if (s_lp != 0) {
lnpath2 <- str_split(paste(df$val2[8],df$val3[8]),"r[ ]|[)][ ]|[ ]peri")
dat$val[14] <- lnpath2[[1]][2]
dat$val[15] <- lnpath2[[1]][3]
}
View(dat)
View(df)
View(lnpath.df)
View(dat)
View(lnpath2)
View(df)
library(stringr)
dat <- data.frame(var=c("ID",
"Pathology",
"Histologic subtype",
"Maximum diameter of tumor",
"Tumor involvement",
"central",
"ret-central",
"mediastinal",
"ret-mediastinal",
"lateral",
"ret-lateral",
"total",
"ret-total",
"max size",
"perinodal"), val='NA',stringsAsFactors = FALSE)
df <- read.table(file = "p2.txt", fill = TRUE, sep=":", strip.white=TRUE,col.names=(1:4))
df <- data.frame(lapply(df, gsub, pattern='\xa1\xde |- |"', replacement='', ignore.case=FALSE))
names(df) = c("var","val","val2","val3")
### diagnosis: path ###
j <- grep("Thyroid gland",df$var,ignore.case=TRUE)
for (i in 1:length(j)) {
k <- grepl("CARCINOMA",df[j[i],2])
if (k == TRUE) {
path <- df[j[i],2]
path <- str_split_fixed(path, "[ ][(]", 2)[1]
}
}
dat$val[2] <- path
for (i in (3:5)) {
if (length(as.character(df$val[grep(dat$var[i], df$var, ignore.case = FALSE)])) == 0){
next
}
dat$val[i] <- as.character(df$val[grep(dat$var[i], df$var, ignore.case = FALSE)])
}
### lymph node : lnpath.df ###
l <- grep("Lymph node",df$var)
# location
ln.df <- data.frame(str_split(df[l,1],","))
colnames(ln.df) = "var"
ln.df <-data.frame(str_split_fixed(ln.df$var, "/|[(]|[)]", 4),stringsAsFactors=FALSE)
lnpatterns <- c("central|delphian|6","3|4|5","7|mediastinal")
lnlocs <- c("central","lateral","mediastinal")
lnlocs2 <-c("ret-central","ret-lateral","ret-mediastinal")
lnpath <- matrix(ncol = 2, nrow = 0)
s_lp = 0
s_lr = 0
for (i in (1:3)) {
l <- grep(c(lnpatterns[i]),ln.df[,1],ignore.case = TRUE)
if (length(l) != 0) {
lp = 0
lr = 0
for (j in 1:length(l)) {
lp = lp + as.numeric(ln.df[l[j],2])
lr = lr + as.numeric(ln.df[l[j],3])
}
lnpath <- rbind(lnpath, c(lnlocs[i],lp))
lnpath <- rbind(lnpath, c(lnlocs2[i],lr))
s_lp = s_lp + lp
s_lr = s_lr + lr
}
}
lnpath <- rbind(lnpath, c("total", s_lp))
lnpath <- rbind(lnpath, c("ret-total", s_lr))
lnpath.df <- data.frame(lnpath,stringsAsFactors = FALSE)
names(lnpath.df) = c("loc","no")
for (i in (6:13)) {
if (length(grep(dat$var[i], lnpath.df$loc)) == 0) {
next
}
dat$val[i] <- lnpath.df$no[grep(dat$var[i], lnpath.df$loc)]
}
# size, perinodal
if (s_lp != 0) {
lnpath2 <- str_split(paste(df$val2[l],df$val3[l]),"r[ ]|[)][ ]|[ ]peri")
dat$val[14] <- lnpath2[[1]][2]
dat$val[15] <- lnpath2[[1]][3]
}
View(dat)
View(lnpath.df)
dat$val[14] <- lnpath2[[1]][2]
lnpath2 <- str_split(paste(df$val2[9],df$val3[9]),"r[ ]|[)][ ]|[ ]peri")
lnpath2
lnpath2[[1]][2]
# size, perinodal
if (s_lp != 0) {
lnpath2 <- str_split(paste(df$val2[l],df$val3[l]),"r[ ]|[)][ ]|[ ]peri")
dat$val[14] <- lnpath2[[1]][2]
dat$val[15] <- lnpath2[[1]][3]
}
# size, perinodal
if (s_lp != 0) {
lnpaths <- str_split(paste(df$val2[l],df$val3[l]),"r[ ]|[)][ ]|[ ]peri")
dat$val[14] <- lnpaths[[1]][2]
dat$val[15] <- lnpaths[[1]][3]
}
lnpaths <- str_split(paste(df$val2[l],df$val3[l]),"r[ ]|[)][ ]|[ ]peri")
library(stringr)
dat <- data.frame(var=c("ID",
"Pathology",
"Histologic subtype",
"Maximum diameter of tumor",
"Tumor involvement",
"central",
"ret-central",
"mediastinal",
"ret-mediastinal",
"lateral",
"ret-lateral",
"total",
"ret-total",
"max size",
"perinodal"), val='NA',stringsAsFactors = FALSE)
df <- read.table(file = "p2.txt", fill = TRUE, sep=":", strip.white=TRUE,col.names=(1:4))
df <- data.frame(lapply(df, gsub, pattern='\xa1\xde |- |"', replacement='', ignore.case=FALSE))
names(df) = c("var","val","val2","val3")
j <- grep("Thyroid gland",df$var,ignore.case=TRUE)
for (i in 1:length(j)) {
k <- grepl("CARCINOMA",df[j[i],2])
if (k == TRUE) {
path <- df[j[i],2]
path <- str_split_fixed(path, "[ ][(]", 2)[1]
}
}
dat$val[2] <- path
for (i in (3:5)) {
if (length(as.character(df$val[grep(dat$var[i], df$var, ignore.case = FALSE)])) == 0){
next
}
dat$val[i] <- as.character(df$val[grep(dat$var[i], df$var, ignore.case = FALSE)])
}
l <- grep("Lymph node",df$var)
# location
ln.df <- data.frame(str_split(df[l,1],","))
colnames(ln.df) = "var"
ln.df <-data.frame(str_split_fixed(ln.df$var, "/|[(]|[)]", 4),stringsAsFactors=FALSE)
lnpatterns <- c("central|delphian|6","3|4|5","7|mediastinal")
lnlocs <- c("central","lateral","mediastinal")
lnlocs2 <-c("ret-central","ret-lateral","ret-mediastinal")
lnpath <- matrix(ncol = 2, nrow = 0)
s_lp = 0
s_lr = 0
for (i in (1:3)) {
l <- grep(c(lnpatterns[i]),ln.df[,1],ignore.case = TRUE)
if (length(l) != 0) {
lp = 0
lr = 0
for (j in 1:length(l)) {
lp = lp + as.numeric(ln.df[l[j],2])
lr = lr + as.numeric(ln.df[l[j],3])
}
lnpath <- rbind(lnpath, c(lnlocs[i],lp))
lnpath <- rbind(lnpath, c(lnlocs2[i],lr))
s_lp = s_lp + lp
s_lr = s_lr + lr
}
}
lnpath <- rbind(lnpath, c("total", s_lp))
lnpath <- rbind(lnpath, c("ret-total", s_lr))
lnpath.df <- data.frame(lnpath,stringsAsFactors = FALSE)
names(lnpath.df) = c("loc","no")
for (i in (6:13)) {
if (length(grep(dat$var[i], lnpath.df$loc)) == 0) {
next
}
dat$val[i] <- lnpath.df$no[grep(dat$var[i], lnpath.df$loc)]
}
View(dat)
View(lnpath.df)
# size, perinodal
if (s_lp != 0) {
lnpaths <- str_split(paste(df$val2[l],df$val3[l]),"r[ ]|[)][ ]|[ ]peri")
dat$val[14] <- lnpaths[[1]][2]
dat$val[15] <- lnpaths[[1]][3]
}
s_lop
s_lp
l
l <- grep("Lymph node",df$var)
# size, perinodal
if (s_lp != 0) {
lnpaths <- str_split(paste(df$val2[l],df$val3[l]),"r[ ]|[)][ ]|[ ]peri")
dat$val[14] <- lnpaths[[1]][2]
dat$val[15] <- lnpaths[[1]][3]
}
# location
ln.df <- data.frame(str_split(df[l,1],","))
colnames(ln.df) = "var"
ln.df <-data.frame(str_split_fixed(ln.df$var, "/|[(]|[)]", 4),stringsAsFactors=FALSE)
lnpatterns <- c("central|delphian|6","3|4|5","7|mediastinal")
lnlocs <- c("central","lateral","mediastinal")
lnlocs2 <-c("ret-central","ret-lateral","ret-mediastinal")
lnpath <- matrix(ncol = 2, nrow = 0)
s_lp = 0
s_lr = 0
for (i in (1:3)) {
l <- grep(c(lnpatterns[i]),ln.df[,1],ignore.case = TRUE)
if (length(l) != 0) {
lp = 0
lr = 0
for (j in 1:length(l)) {
lp = lp + as.numeric(ln.df[l[j],2])
lr = lr + as.numeric(ln.df[l[j],3])
}
lnpath <- rbind(lnpath, c(lnlocs[i],lp))
lnpath <- rbind(lnpath, c(lnlocs2[i],lr))
s_lp = s_lp + lp
s_lr = s_lr + lr
}
}
lnpath <- rbind(lnpath, c("total", s_lp))
lnpath <- rbind(lnpath, c("ret-total", s_lr))
lnpath.df <- data.frame(lnpath,stringsAsFactors = FALSE)
names(lnpath.df) = c("loc","no")
for (i in (6:13)) {
if (length(grep(dat$var[i], lnpath.df$loc)) == 0) {
next
}
dat$val[i] <- lnpath.df$no[grep(dat$var[i], lnpath.df$loc)]
}
View(dat)
### id ###
id <- as.character(df$var[1])
data.all <- cbind(data.all, dat$val)
data.all <- dat
View(data.all)
data.all[,2] <- NULL
data.all <- cbind(data.all, dat$val)
colnames(data.all)[length(data.all)] <- j
write.csv(data.all, file="PathparseRaw.csv")
View(dat)
View(data.all)
View(data.all)
View(dat)
dat <- data.frame(var=c("Pathology",
"Histologic subtype",
"Maximum diameter of tumor",
"Tumor involvement",
"central",
"ret-central",
"mediastinal",
"ret-mediastinal",
"lateral",
"ret-lateral",
"total",
"ret-total",
"max size",
"perinodal"), val='NA',stringsAsFactors = FALSE)
View(dat)
dat <- data.frame(var=c("Pathology",
"Histologic subtype",
"Maximum diameter of tumor",
"Tumor involvement",
"central",
"ret-central",
"mediastinal",
"ret-mediastinal",
"lateral",
"ret-lateral",
"total",
"ret-total",
"max size",
"perinodal"), val='NA',stringsAsFactors = FALSE)
data.all <- dat
View(data.all)
source('~/Google Drive/2017 KSNM CTN/ThyPathParsing/ThyPathParsing.R', echo=TRUE)
View(data.all)
id <- as.character(df$var[1])
id
data.all <- cbind(data.all, dat$val)
colnames(data.all)[length(data.all)] <- id
write.csv(data.all, file="PathparseRaw.csv")
View(data.all)
